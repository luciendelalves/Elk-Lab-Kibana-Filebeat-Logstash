filter {
  if [event][dataset] == "system.auth" and ("sshd" in [process][name] or "sshd" in [program]) {

    grok {
      match => {
        "message" => [
          "Failed password for (invalid user )?%{DATA:ssh_user} from %{IP:ssh_ip} port %{NUMBER:ssh_port:int} %{DATA:ssh_method}",
          "Invalid user %{DATA:ssh_user} from %{IP:ssh_ip} port %{NUMBER:ssh_port:int}( %{GREEDYDATA:ssh_extra})?"
        ]
      }
      tag_on_failure => [ "ssh_grok_nomatch" ]
    }

    mutate {
      rename    => { "ssh_user"   => "[ssh][user]" }
      rename    => { "ssh_ip"     => "[ssh][ip]" }
      rename    => { "ssh_port"   => "[ssh][port]" }
      rename    => { "ssh_method" => "[ssh][method]" }
      convert   => { "[ssh][port]" : "integer" }
      lowercase => [ "[ssh][method]" ]
      add_field => { "[ssh][event]" : "auth_attempt" }
    }

    if [ssh][ip] and [ssh][ip] !~ "^10\.|^192\.168\.|^172\.(1[6-9]|2[0-9]|3[0-1])\." {
      geoip { source => "[ssh][ip]" target => "[ssh][geoip]" }
    }
  }
}

